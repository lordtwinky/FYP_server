"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var simplify_claims_1 = require("./simplify_claims");
var utils_1 = require("../utils");
function simplifyEntity(lang, data, options) {
    if (options === void 0) { options = {}; }
    var entity = { id: data.id };
    if (data.pageid) {
        entity.pageid = data.pageid;
    }
    if (options.labels !== false && data.labels) {
        entity.label = simplifyLabels(data.labels)[lang];
    }
    if (options.descriptions !== false && data.descriptions) {
        entity.description = simplifyDescriptions(data.descriptions)[lang];
        if (!entity.description) {
            delete entity.description;
        }
    }
    if (options.aliases !== false && data.aliases) {
        entity.aliases = simplifyAliases(data.aliases)[lang];
        if (!entity.aliases) {
            delete entity.aliases;
        }
    }
    if (options.sitelinks !== false && data.sitelinks) {
        entity.sitelinks = simplifySitelinks(data.sitelinks);
    }
    if (options.claims !== false && data.claims) {
        entity.claims = simplify_claims_1.simplifyClaims(data.claims);
    }
    return entity;
}
exports.simplifyEntity = simplifyEntity;
function simplifyAliases(data) {
    return getManyLangValue(data);
}
exports.simplifyAliases = simplifyAliases;
function simplifyDescriptions(data) {
    return getLangValue(data);
}
exports.simplifyDescriptions = simplifyDescriptions;
function simplifyLabels(data) {
    return getLangValue(data);
}
exports.simplifyLabels = simplifyLabels;
function simplifySitelinks(data) {
    if (data) {
        var result_1 = {};
        Object.keys(data).forEach(function (site) { result_1[site.replace(/wiki$/, '')] = data[site].title; });
        return result_1;
    }
    return null;
}
exports.simplifySitelinks = simplifySitelinks;
function getLangValue(data) {
    if (data) {
        var result_2 = {};
        Object.keys(data).forEach(function (lang) { result_2[lang] = data[lang].value; });
        return result_2;
    }
    return null;
}
function getManyLangValue(data) {
    if (data) {
        var result_3 = {};
        Object.keys(data).forEach(function (lang) { result_3[lang] = utils_1._.map(data[lang], 'value'); });
        return result_3;
    }
    return null;
}
