export declare type IIndexType<T> = {
    [index: string]: T;
};
export interface WikidataPropertyValue {
    datatype: string;
    value: any;
    pageid?: number;
    value_string?: string;
    label?: string;
    description?: string;
}
export interface WikidataBaseEntity {
    id: string;
    label?: string;
    description?: string;
}
export interface WikidataProperty extends WikidataBaseEntity {
    values: WikidataPropertyValue[];
}
export declare type WikidataEntityClaims = IIndexType<WikidataProperty>;
export interface WikidataEntity extends WikidataBaseEntity {
    pageid?: number;
    aliases?: string[];
    sitelinks?: IIndexType<string>;
    claims?: WikidataEntityClaims;
}
export declare type WikidataEntities = IIndexType<WikidataEntity>;
export interface WikiEntity extends WikidataEntity {
    extract?: string;
    types?: string[];
    redirects?: string[];
}
export declare type WikiEntities = IIndexType<WikiEntity>;
export declare type ParamClaimsType = 'none' | 'all' | 'item' | 'property';
export interface WikidataEntitiesParams {
    ids?: string;
    titles?: string;
    props?: string;
    language?: string;
    redirect?: string;
    claims?: ParamClaimsType;
}
export interface WikiEntitiesParams extends WikidataEntitiesParams {
    extract?: number;
    types?: boolean | string[];
    redirects?: boolean;
}
